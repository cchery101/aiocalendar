<?php

include_once('aiocalendar.features.inc');

/*
 * Implementation of hook_init().
 */
function aiocalendar_init() {
  drupal_add_css(drupal_get_path('module', 'aiocalendar') . "/aiocalendar.css");

  jquery_ui_add(array('ui.dialog'));

  // CSS coloring for the legend.
  drupal_add_css(file_directory_path() . "/aiocalendar_legend.css");

  drupal_add_js(drupal_get_path('module', 'aiocalendar') . "/aiocalendar.js");
  drupal_add_js(drupal_get_path('module', 'aiocalendar') . "/js/jquery.bt.min.js");
  drupal_add_js(drupal_get_path('module', 'aiocalendar') . "/js/excanvas/excanvas.compiled.js");
  drupal_add_js(drupal_get_path('module', 'aiocalendar') . "/js/hoverintent.js");
  drupal_add_js("Drupal.settings.aiocalendarPath = '" . drupal_get_path('module', 'aiocalendar') . "';", 'inline');

  // Add the email submit form:
  drupal_add_js("alert(" + $email_event_form + ")
              $(document).ready( function() {
                $('body').append('" + $email_event_form + "');
              
              
              
              
              
              
              });  ", 'inline');

  // Add path to theme to Drupal.settings.themePath
  $theme_path = path_to_theme();
  drupal_add_js("Drupal.settings.themePath = '" . $theme_path . "';", 'inline');
}

/*
 * Implementation of hook_views_pre_render().
 * Generate CSS to color border above checkboxes and add email event form.
 */
function aiocalendar_views_pre_render(&$view) {
  $calendar_colors = array();
  if ($view->name == "events_calendar"
      && isset($view->date_info->calendar_colors_taxonomy)) {

    // create a css file to color the diffent catagories of events.
    $calendar_colors = $view->date_info->calendar_colors_taxonomy;

    $css = "";
    foreach ($calendar_colors as $tid => $color) {
      $css .= "#edit-tid-" . $tid . "-wrapper {";
      $css .= "border-top: 5px solid " . $color . ";";
      $css .= "}";
    }
    if (!empty($css)) {
      file_save_data($css, file_directory_path() . "/aiocalendar_legend.css", FILE_EXISTS_REPLACE);
    }
  }
}

/*
 * Override theme_calendar_ical_icon() so we can override the url produced.
 */
function phptemplate_calendar_ical_icon($url) {

  $search = preg_match_all("/tid\[([0-9])*\]/", $url, $matches);
  $tids = $matches[1];

  $search = preg_match("/(.*ical\/)20[0-9]{2}.*/", $url, $url_stem);

  $url = $url_stem[1];

  // Views arguments treat a "+" between arguments as OR.
  // So we're crafting an argument that asks for all events which match one of the
  // term IDs.
  foreach ($tids as $tid) {
    $url .= $tid . "+";
  }

  // Clean off extra +
  $url = trim($url, "+");


  if ($image = theme('image', drupal_get_path('module', 'aiocalendar') .'/images/ical.png', t('Add to calendar'), t('Add to calendar'))) {
    return '<div style="text-align:r  ight"><a href="'. check_url($url) .'" class="ical-icon" title="ical">'. $image .'</a></div>';
  }
}

/**
 * Override theme_feed_icon() so we can override the url produced.
 *
 * Return code that emits an feed icon.
 *
 * @param $url
 *   The url of the feed.
 * @param $title
 *   A descriptive title of the feed.
  */
function phptemplate_feed_icon($url, $title) {
  $search = preg_match_all("/tid\[([0-9])*\]/", $url, $matches);
  $tids = $matches[1];

  $search = preg_match("/(.*rss\/)20[0-9]{2}-.*/", $url, $url_stem);

  $url = $url_stem[1];

  // Views arguments treat a "+" between arguments as OR.
  // So we're crafting an argument that asks for all events which match one of the
  // term IDs.
  foreach ($tids as $tid) {
    $url .= $tid . "+";
  }

  // Clean off extra +
  $url = trim($url, "+");

  if ($image = theme('image', drupal_get_path('module', 'aiocalendar') .'/images/feed-icon.png', t('Syndicate content'), 'RSS')) {
    return '<a href="'. check_url($url) .'" class="feed-icon">'. $image .'</a>';
  }
}


/**
 * Implements hook_form_alter().
 * Let's add a quick link to the taxonomy selector to add a link to add new terms.
 */
function aiocalendar_form_alter(&$form, &$form_state, $form_id) {

  switch ($form_id) {
    case 'calendar_event_node_form':
      $aiocalendar_event_type_vid = variable_get('aiocalendar_event_type_vid', 0);
      $form['taxonomy'][$aiocalendar_event_type_vid]['#description'] = l(t('Add more categories here.'), 'admin/content/taxonomy/'. $aiocalendar_event_type_vid .'/add/term');
      break;

  }

}

/**
 * Implements hook_theme_registry_alter().
 */
function aiocalendar_theme_registry_alter(&$registry) {
  // Move the theme path so the theme takes precidence over this module theme.
  array_unshift($registry['node']['theme paths'], drupal_get_path('module', 'aiocalendar') . '/theme');
}

/**
 * Implements hook_preprocess_node().
 */
function aiocalendar_preprocess_node(&$variables) {
  if ($variables['node']->type == 'calendar_event') {
    $variables['template_files'][] = 'aiocalendar-event';
  }

}

/**
 * Implements hook_theme().
 */
function aiocalendar_theme($existing, $type, $theme, $path) {
  return array(
    'calendar_event' => array(
      'arguments' => array('node' => NULL, 'teaser' => FALSE, 'page' => FALSE),
      'template' => 'aiocalendar-event',
      'path' => drupal_get_path('module', 'aiocalendar') .'/theme',
    ),
  );
}



