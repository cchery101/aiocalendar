<?php

include_once('aiocalendar.features.inc');

/*
 * Implements hook_init().
 */
function aiocalendar_init() {

  drupal_add_css(drupal_get_path('module', 'aiocalendar') . "/aiocalendar.css");

  // CSS coloring for the legend.
  // drupal_add_css(variable_get('file_public_path', conf_path() . '/files') . "/aiocalendar_legend.css");
  //
  // drupal_add_js(drupal_get_path('module', 'aiocalendar') . "/aiocalendar.js");
  // drupal_add_js(drupal_get_path('module', 'aiocalendar') . "/js/hoverintent.js");
  // drupal_add_js("Drupal.settings.aiocalendarPath = '" . drupal_get_path('module', 'aiocalendar') . "';", 'inline');

  // Add path to theme to Drupal.settings.themePath
  $theme_path = path_to_theme();
  drupal_add_js("Drupal.settings.themePath = '" . $theme_path . "';", 'inline');
}

/*
 * Implements hook_views_pre_render().
 * Generate CSS to color border above checkboxes and add email event form.
 */
function aiocalendar_views_pre_render(&$view) {
  
  // dpm($view);
  $calendar_colors = array();
  if ($view->name == "events_calendar"
      && isset($view->date_info->calendar_colors_taxonomy)) {

    // Add form for emailing events. We hide it via css.
    // $email_event_form = drupal_get_form('aiocalendar_email_event_form');
    // $view->attachment_before = $email_event_form;


    // create a css file to color the diffent catagories of events.
    $calendar_colors = $view->date_info->calendar_colors_taxonomy;

    $css = "";
    foreach ($calendar_colors as $tid => $color) {
      $css .= "#edit-tid-" . $tid . "-wrapper {";
      $css .= "border-top: 5px solid " . $color . ";";
      $css .= "}";
    }
    if (!empty($css)) {
      file_save_data($css, file_directory_path() . "/aiocalendar_legend.css", FILE_EXISTS_REPLACE);
    }
  }
  
  

  
}

/**
 * Post process any rendered data.
 *
 */
function aiocalendar_views_post_render(&$view, &$output, &$cache) {

  if (!empty($view->result) && $view->current_display == 'page_1') {
    foreach ($view->result as $value) {
      // dpm($value);
      
      $event_tip ='<div id="calendar.' . $value->nid . '.field_date.0.0-content"><div class="tooltip-event">
        <h2><a href="' . base_path() . '/node/' . $value->nid . '" title="' . $value->node_title . '">' . $value->node_title . '</a></h2>
        <div class="event-time">
          <strong>Time:</strong> ' . $value->field_field_date[0]['rendered']['#markup'] . '
        </div>';
        
      if ($value->field_field_event_location) {
        $event_tip .='<div class="event-location"><strong>Location:</strong> ' . $value->field_field_event_location[0]['rendered']['#markup'] . '</div>';
      }
        
      $event_tip .='</div></div>';

      $options['bt_events_calendar' . $value->nid] = array(
        'cssSelect' => '.calendar\\.' . $value->nid . '\\.field_date\\.0\\.0',
        // 'cssSelect' => '.view-item-events_calendar',
        'text' => $event_tip,
        'style' => 'hulu',
        'trigger' => array('mouseover', 'click'),
        'width' => 300,
        'height' => 200,
      );

    }
    beautytips_add_beautytips($options);
  }
  
}


/**
 * Implements hook_theme_registry_alter().
 */
function aiocalendar_theme_registry_alter(&$theme_registry) {
  // Move the theme path so the theme takes precidence over this module theme.
  
  // $theme_registry['calendar_ical_icon']['theme path'] = drupal_get_path('module', 'aiocalendar');
  // $theme_registry['calendar_ical_icon']['preprocess functions'][] = 'aio_preprocess_calendar_ical_icon';
  // 
  // 
  // dpm($theme_registry['calendar_ical_icon']);
  
  // array_unshift($registry['node']['theme paths'], drupal_get_path('module', 'aiocalendar') . '/theme');
  
  global $theme;
  
  $mod_path = drupal_get_path('module', 'aiocalendar');
  $theme_registry_copy = $theme_registry;       // munge on a copy
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', $theme, $mod_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
  $hooks = array('node');
  foreach ($hooks as $h) {
    _aiocalendar_insert_after_first_element($theme_registry[$h]['theme paths'], $mod_path);
  }
  
}

/**
 * Helper function for re-ordering arrays (needed by theme_registry_alter)
*/
function _aiocalendar_insert_after_first_element(&$a, $element) {
  if(is_array($a)) {
    $first_element = array_shift($a);
    array_unshift($a, $first_element, $element);
  }
}

/**
 * Implements hook_preprocess_node().
 */
function aiocalendar_preprocess_node(&$variables) {
  if ($variables['node']->type == 'calendar_event') {
    $variables['template_files'][] = 'aiocalendar-event';
  }
}

/**
 * Implements hook_theme().
 */
function aiocalendar_theme($existing, $type, $theme, $path) {
  
  // dpm($theme_registry);
  
  
  return array(
    'calendar_event' => array(
      'arguments' => array('node' => NULL, 'teaser' => FALSE, 'page' => FALSE),
      'template' => 'aiocalendar-event',
      'path' => drupal_get_path('module', 'aiocalendar') . '/theme',
    ),
  );
}

